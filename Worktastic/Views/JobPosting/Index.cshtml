@model List<JobPosting>

@{
    ViewData["Title"] = "Your Jobs";
}

<a class="btn btn-primary" asp-controller="JobPosting" asp-action="CreateEditJobPosting">Post New Job</a>

<hr />

<table id="jobPostingTable" class="table table-bordered table-striped table-hover">
    <thead class="thead-dark">
        <tr>
            <th>Job Title</th>
            <th>Job Location</th>
            <th>Company Name</th>
            <th>Actions</th>
        </tr>
    </thead>

    <tbody>
        @{
            foreach (JobPosting jobPosting in Model)
            { 
                <tr>
                    <td>@jobPosting.JobTitle</td>
                    <td>@jobPosting.JobLocation</td>
                    <td>@jobPosting.CompanyName</td>
                    <td>
                        <a asp-route-id="@jobPosting.Id" asp-controller="JobPosting" asp-action="CreateEditJobPosting" class="btn btn-warning">Edit</a>
                        <button class="btn btn-danger" onclick="onClickDeleteButton(@jobPosting.Id)">Delete</button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#jobPostingTable').DataTable();
        });

        function onClickDeleteButton(id) {

            Swal.fire({
                title: 'Are you sure you want to delete the entry?',
                showDenyButton: true,
                showCancelButton: false,
                confirmButtonText: `Keep`,
                denyButtonText: `Delete`,
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    Swal.fire('Not deleted.', '', 'info')
                } else if (result.isDenied) {

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("DeleteJobPostingById")",
                        data: { id: id },
                        sucess: function (msg) {
                            location.reload();
                        },
                        error: function (msg) {
                            Swal.fire('Entry could not be deleted.', '', 'error')
                        }
                    });

                    
                }
            })
        }
    </script>
}